{
  "name": "Java-12",
  "language": "java",
  "temperature": 0.8,
  "top_p": 0.95,
  "max_tokens": 1024,
  "prompt": "import java.util.*;\nimport java.text.SimpleDateFormat;\nimport java.text.ParseException;\n\nclass Problem {\n    /**\n     * Given a date in the format \"MM dd yyyy\", return the weekday of the date.\n     * \n     * Example:\n     * >>> convertDatesToWeekdays(\"11 15 1997\")\n     * \"November 15, 1997 is a Saturday\"\n     * >>> convertDatesToWeekdays(\"01 01 2000\")\n     * \"January 1, 2000 is a Saturday\"\n     * >>> convertDatesToWeekdays(\"07 04 1998\")\n     * \"July 4, 1998 is a Saturday\"\n     */\n    public static String convertDatesToWeekdays(String date) ",
  "tests": "    public static void main(String[] args) {\n        // Test the function with different test cases\n        assert convertDatesToWeekdays(\"02 05 2024\").equals(\"February 5, 2024 is a Monday\");\n        assert convertDatesToWeekdays(\"01 12 2023\").equals(\"January 12, 2023 is a Thursday\");\n        assert convertDatesToWeekdays(\"09 14 2013\").equals(\"September 14, 2013 is a Saturday\");\n        System.out.println(\"All tests passed\");\n    }\n}",
  "stop_tokens": [],
  "results": [
    {
      "program": "import java.util.*;\nimport java.text.SimpleDateFormat;\nimport java.text.ParseException;\n\nclass Problem {\n    /**\n     * Given a date in the format \"MM dd yyyy\", return the weekday of the date.\n     * \n     * Example:\n     * >>> convertDatesToWeekdays(\"11 15 1997\")\n     * \"November 15, 1997 is a Saturday\"\n     * >>> convertDatesToWeekdays(\"01 01 2000\")\n     * \"January 1, 2000 is a Saturday\"\n     * >>> convertDatesToWeekdays(\"07 04 1998\")\n     * \"July 4, 1998 is a Saturday\"\n     */\n    public static String convertDatesToWeekdays(String date)  {\n        if (date == null || date.length() != 11) {\n            throw new IllegalArgumentException(\"Invalid date string.\");\n        }\n        String[] parts = date.split(\" \");\n        String month = parts[0];\n        String day = parts[1];\n        String year = parts[2];\n        String fullDate = month + \" \" + day + \", \" + year;\n        SimpleDateFormat sdf = new SimpleDateFormat(\"MMM dd, yyyy\");\n        Date d;\n        try {\n            d = sdf.parse(fullDate);\n        } catch (ParseException e) {\n            return \"Invalid date string.\";\n        }\n        Calendar cal = Calendar.getInstance();\n        cal.setTime(d);\n        int weekday = cal.get(Calendar.DAY_OF_WEEK);\n        String weekdayString = \"\";\n        switch (weekday) {\n            case Calendar.SUNDAY:\n                weekdayString = \"Sunday\";\n                break;\n            case Calendar.MONDAY:\n                weekdayString = \"Monday\";\n                break;\n            case Calendar.TUESDAY:\n                weekdayString = \"Tuesday\";\n                break;\n            case Calendar.WEDNESDAY:\n                weekdayString = \"Wednesday\";\n                break;\n            case Calendar.THURSDAY:\n                weekdayString = \"Thursday\";\n                break;\n            case Calendar.FRIDAY:\n                weekdayString = \"Friday\";\n                break;\n            case Calendar.SATURDAY:\n                weekdayString = \"Saturday\";\n                break;\n        }\n        return fullDate + \" is a \" + weekdayString;\n    }\n    public static void main(String[] args) {\n        // Test the function with different test cases\n        assert convertDatesToWeekdays(\"02 05 2024\").equals(\"February 5, 2024 is a Monday\");\n        assert convertDatesToWeekdays(\"01 12 2023\").equals(\"January 12, 2023 is a Thursday\");\n        assert convertDatesToWeekdays(\"09 14 2013\").equals(\"September 14, 2013 is a Saturday\");\n        System.out.println(\"All tests passed\");\n    }\n}",
      "timestamp": 1741528515,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.IllegalArgumentException: Invalid date string.\n\tat Problem.convertDatesToWeekdays(tmp7wuo68xh.java:19)\n\tat Problem.main(tmp7wuo68xh.java:64)\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}