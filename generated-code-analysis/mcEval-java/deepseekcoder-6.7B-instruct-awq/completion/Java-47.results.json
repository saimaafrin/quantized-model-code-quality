{
  "name": "Java-47",
  "language": "java",
  "temperature": 0.8,
  "top_p": 0.95,
  "max_tokens": 1024,
  "prompt": "class Problem {\n\n  /**\n   * Determine if the given points form a boomerang on the X-Y plane.\n   *\n   * @param points An array of points where points[i] = [xi, yi].\n   * @return True if the points form a boomerang, false otherwise.\n   *\n   * Example:\n   * isBoomerang(new int[][]{{1,1},{2,3},{3,2}})\n   * Output: true\n   */\n  public static boolean isBoomerang(int[][] points) ",
  "tests": "  public static void main(String[] args) {\n    assert isBoomerang(new int[][] { { 0, 0 }, { 2, 2 }, { 1, 1 } }) ==\n    false : \"Test case 1 failed\";\n    assert isBoomerang(new int[][] { { 1, 1 }, { 2, 4 }, { 3, 1 } }) ==\n    true : \"Test case 2 failed\";\n    assert isBoomerang(new int[][] { { 0, 1 }, { 1, 0 }, { 0, -1 } }) ==\n    true : \"Test case 3 failed\";\n\n    System.out.println(\"All tests passed\");\n  }\n}",
  "stop_tokens": [],
  "results": [
    {
      "program": "class Problem {\n\n  /**\n   * Determine if the given points form a boomerang on the X-Y plane.\n   *\n   * @param points An array of points where points[i] = [xi, yi].\n   * @return True if the points form a boomerang, false otherwise.\n   *\n   * Example:\n   * isBoomerang(new int[][]{{1,1},{2,3},{3,2}})\n   * Output: true\n   */\n  public static boolean isBoomerang(int[][] points)  {\n    if (points[0][0] == points[1][0] && points[0][1] == points[1][1]) {\n      return false;\n    }\n    if (points[0][0] == points[2][0] && points[0][1] == points[2][1]) {\n      return false;\n    }\n    if (points[1][0] == points[2][0] && points[1][1] == points[2][1]) {\n      return false;\n    }\n    if (points[0][0] == points[1][0]) {\n      return false;\n    }\n    if (points[0][0] == points[2][0]) {\n      return false;\n    }\n    if (points[1][0] == points[2][0]) {\n      return false;\n    }\n    double k1 = (double) (points[1][1] - points[0][1]) / (points[1][0] - points[0][0]);\n    double k2 = (double) (points[2][1] - points[1][1]) / (points[2][0] - points[1][0]);\n    return k1 != k2;\n  }\n  public static void main(String[] args) {\n    assert isBoomerang(new int[][] { { 0, 0 }, { 2, 2 }, { 1, 1 } }) ==\n    false : \"Test case 1 failed\";\n    assert isBoomerang(new int[][] { { 1, 1 }, { 2, 4 }, { 3, 1 } }) ==\n    true : \"Test case 2 failed\";\n    assert isBoomerang(new int[][] { { 0, 1 }, { 1, 0 }, { 0, -1 } }) ==\n    true : \"Test case 3 failed\";\n\n    System.out.println(\"All tests passed\");\n  }\n}",
      "timestamp": 1741622021,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError: Test case 3 failed\n\tat Problem.main(tmpx1b1jrej.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}