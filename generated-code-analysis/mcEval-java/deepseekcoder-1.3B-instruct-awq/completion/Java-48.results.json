{
  "name": "Java-48",
  "language": "java",
  "temperature": 0.8,
  "top_p": 0.95,
  "max_tokens": 1024,
  "prompt": "import java.lang.Math;\n\nclass Problem {\n\n  /**\n   * Find and return the nth ugly number.\n   *\n   * @param n The index of the ugly number to find.\n   * @return The nth ugly number.\n   *\n   * Example:\n   * findNthUglyNumber(10)\n   * Output: 12\n   */\n  public static int findNthUglyNumber(int n) ",
  "tests": "  public static void main(String[] args) {\n    assert findNthUglyNumber(1) == 1 : \"Test case 1 failed\";\n    assert findNthUglyNumber(7) == 8 : \"Test case 2 failed\";\n    assert findNthUglyNumber(15) == 24 : \"Test case 3 failed\";\n\n    System.out.println(\"All tests passed\");\n  }\n}\n",
  "stop_tokens": [],
  "results": [
    {
      "program": "import java.lang.Math;\n\nclass Problem {\n\n  /**\n   * Find and return the nth ugly number.\n   *\n   * @param n The index of the ugly number to find.\n   * @return The nth ugly number.\n   *\n   * Example:\n   * findNthUglyNumber(10)\n   * Output: 12\n   */\n  public static int findNthUglyNumber(int n)  {\n    if (n <= 0) {\n      return 0;\n    }\n    int[] uglyNumbers = new int[n];\n    uglyNumbers[0] = 1;\n    int nextIndex = 1;\n    int i2 = 0, i3 = 0, i5 = 0;\n    while (nextIndex < n) {\n      uglyNumbers[nextIndex] = Math.min(uglyNumbers[i2] * 2, Math.min(uglyNumbers[i3] * 3, uglyNumbers[i5] * 5));\n      if (uglyNumbers[nextIndex] == uglyNumbers[i2] * 2) {\n        i2++;\n      }\n      if (uglyNumbers[nextIndex] == uglyNumbers[i3] * 3) {\n        i3++;\n      }\n      if (uglyNumbers[nextIndex] == uglyNumbers[i5] * 5) {\n        i5++;\n      }\n      nextIndex++;\n    }\n    return uglyNumbers[nextIndex - 1];\n  }\n  public static void main(String[] args) {\n    assert findNthUglyNumber(1) == 1 : \"Test case 1 failed\";\n    assert findNthUglyNumber(7) == 8 : \"Test case 2 failed\";\n    assert findNthUglyNumber(15) == 24 : \"Test case 3 failed\";\n\n    System.out.println(\"All tests passed\");\n  }\n}\n",
      "timestamp": 1741620770,
      "stdout": "All tests passed\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}